// Obtain files from source control system.
if (utils.scm_checkout()) return

// Allow modification of the job configuration, affects all relevant
// build configs.
// Pass this object in the argument list to the`run()` function below
// to apply these settings to the job's execution.
jobconfig = new JobConfig()
jobconfig.credentials = [
        ['drizzlepac_codecov', 'CODECOV_TOKEN']
    ]
jobconfig.post_test_summary = true

// Configure artifactory ingest
data_config = new DataConfig()
data_config.server_id = 'bytesalad'
data_config.root = 'tests_output'
data_config.match_prefix = '(.*)_result' // .json is appended automatically

bc1 = new BuildConfig()
bc1.nodetype = 'linux'
bc1.env_vars = ['TEST_BIGDATA=https://bytesalad.stsci.edu/artifactory']
bc1.name = '3.9'
bc1.conda_packages = ['python=3.9']
bc1.build_cmds = ["pip install numpy astropy codecov pytest-cov ci-watson==0.5",
		 "pip install --upgrade -e '.[test]'",
                 "pip freeze"]
bc1.test_cmds = ["pytest --cov=./ --basetemp=tests_output --junitxml results.xml --bigdata",
                "codecov"]
bc1.test_configs = [data_config]
bc1.failedFailureThresh = 0


// Iterate over configurations that define the (distributed) build matrix.
// Spawn a host (or workdir) for each combination and run in parallel.
// Also apply the job configuration defined in `jobconfig` above.
//utils.run([bc1, bc3, bc4, jobconfig])
utils.run([bc1, jobconfig])
